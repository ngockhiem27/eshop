CREATE OR REPLACE PACKAGE ESHOP_PRODUCT_API AS

PROCEDURE SP_PRODUCT_GETALLPRODUCT 
(
    PRD_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_PRODUCT_GETALLPRODUCTWITHCATEGORY
(
    PRD_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_PRODUCT_GETPRODUCTBYID
(
    PRD_ID IN PRODUCT.ID%TYPE,
    PRD_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_PRODUCT_GETPRODUCTBYCATEGORY
(
    CAT_ID IN CATEGORY.ID%TYPE,
    PRD_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_PRODUCT_DELETEPRODUCT 
(
    PRD_ID IN PRODUCT.ID%TYPE
);

PROCEDURE SP_PRODUCT_ADDPRODUCT 
(
    PRD_NAME IN PRODUCT.NAME%TYPE,
    PRD_REGULAR_PRICE IN PRODUCT.REGULAR_PRICE%TYPE,
    PRD_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_PRODUCT_UPDATEPRODUCT 
(
    PRD_ID IN PRODUCT.ID%TYPE,
    PRD_NAME IN PRODUCT.NAME%TYPE,
    PRD_REGULAR_PRICE IN PRODUCT.REGULAR_PRICE%TYPE,
    PRD_CURSOR OUT SYS_REFCURSOR
);

END ESHOP_PRODUCT_API;
/

CREATE OR REPLACE PACKAGE BODY ESHOP_PRODUCT_API AS

PROCEDURE SP_PRODUCT_GETALLPRODUCT 
(
    PRD_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN PRD_CURSOR FOR 
SELECT PRODUCT.* FROM PRODUCT ORDER BY PRODUCT.ID ASC;
END;

PROCEDURE SP_PRODUCT_GETALLPRODUCTWITHCATEGORY
(
    PRD_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN PRD_CURSOR FOR 
SELECT CATEGORY.ID AS CATEGORY_ID, CATEGORY.NAME AS CATEGORY_NAME, CATEGORY.CREATED_AT AS CATEGORY_CREATED_AT,
PRODUCT.ID AS PRODUCT_ID, PRODUCT.NAME AS PRODUCT_NAME, PRODUCT.REGULAR_PRICE, PRODUCT.DISCOUNT_PRICE, PRODUCT.CREATED_AT, PRODUCT.UPDATED_AT 
FROM PRODUCT_CATEGORY
INNER JOIN CATEGORY ON CATEGORY.ID=PRODUCT_CATEGORY.CATEGORY_ID
INNER JOIN PRODUCT ON PRODUCT.ID=PRODUCT_CATEGORY.PRODUCT_ID
ORDER BY CATEGORY.ID ASC;
END;

PROCEDURE SP_PRODUCT_GETPRODUCTBYID 
(
    PRD_ID IN PRODUCT.ID%TYPE,
    PRD_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN PRD_CURSOR FOR 
SELECT PRODUCT.* FROM PRODUCT WHERE PRODUCT.ID=PRD_ID;
END;

PROCEDURE SP_PRODUCT_GETPRODUCTBYCATEGORY 
(
    CAT_ID IN CATEGORY.ID%TYPE,
    PRD_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN PRD_CURSOR FOR 
SELECT PRODUCT.* 
FROM PRODUCT_CATEGORY
INNER JOIN PRODUCT ON PRODUCT.ID=PRODUCT_CATEGORY.PRODUCT_ID
WHERE PRODUCT_CATEGORY.CATEGORY_ID=2;
END;

PROCEDURE SP_PRODUCT_DELETEPRODUCT 
(
    PRD_ID IN PRODUCT.ID%TYPE
)
AS
BEGIN
DELETE FROM PRODUCT WHERE PRODUCT.ID=PRD_ID;
END;

PROCEDURE SP_PRODUCT_ADDPRODUCT
(
    PRD_NAME IN PRODUCT.NAME%TYPE,
    PRD_REGULAR_PRICE IN PRODUCT.REGULAR_PRICE%TYPE,
    PRD_CURSOR OUT SYS_REFCURSOR
)
AS
PRD_ID INT;
BEGIN
INSERT INTO PRODUCT(NAME, REGULAR_PRICE, CREATED_AT, UPDATED_AT)
VALUES(PRD_NAME, PRD_REGULAR_PRICE, CURRENT_TIMESTAMP(2), CURRENT_TIMESTAMP(2))
RETURNING ID INTO PRD_ID;
OPEN PRD_CURSOR FOR
SELECT PRODUCT.* FROM PRODUCT WHERE PRODUCT.ID=PRD_ID;
END;

PROCEDURE SP_PRODUCT_UPDATEPRODUCT 
(
    PRD_ID IN PRODUCT.ID%TYPE,
    PRD_NAME IN PRODUCT.NAME%TYPE,
    PRD_REGULAR_PRICE IN PRODUCT.REGULAR_PRICE%TYPE,
    PRD_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
UPDATE PRODUCT SET
    PRODUCT.NAME = PRD_NAME, 
    PRODUCT.REGULAR_PRICE = PRD_REGULAR_PRICE,
    PRODUCT.UPDATED_AT = CURRENT_TIMESTAMP(2)
WHERE PRODUCT.ID = PRD_ID;
OPEN PRD_CURSOR FOR
SELECT PRODUCT.* FROM PRODUCT WHERE PRODUCT.ID=PRD_ID;
END;

END ESHOP_PRODUCT_API;
/