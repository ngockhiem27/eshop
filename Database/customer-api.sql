CREATE OR REPLACE PACKAGE ESHOP_CUSTOMER_API AS

PROCEDURE SP_CUSTOMER_GETALLCUSTOMER 
(
    CTM_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_CUSTOMER_GETCUSTOMERBYID
(
    CTM_ID IN CUSTOMER.ID%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_CUSTOMER_GETCUSTOMERBYEMAIL
(
    CTM_EMAIL IN CUSTOMER.EMAIL%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_CUSTOMER_AUTHENTICATECUSTOMER
(
    CTM_EMAIL IN CUSTOMER.EMAIL%TYPE,
    CTM_PASSWORD_HASH IN CUSTOMER.PASSWORD_HASH%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_CUSTOMER_DELETECUSTOMER 
(
    CTM_ID IN CUSTOMER.ID%TYPE
);

PROCEDURE SP_CUSTOMER_ADDCUSTOMER 
(
    CTM_FIRSTNAME IN CUSTOMER.FIRSTNAME%TYPE,
    CTM_LASTNAME IN CUSTOMER.LASTNAME%TYPE,
    CTM_EMAIL IN CUSTOMER.EMAIL%TYPE,
    CTM_PASSWORD_HASH IN CUSTOMER.PASSWORD_HASH%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
);

PROCEDURE SP_CUSTOMER_UPDATECUSTOMER 
(
    CTM_ID IN CUSTOMER.ID%TYPE,
    CTM_FIRSTNAME IN CUSTOMER.FIRSTNAME%TYPE,
    CTM_LASTNAME IN CUSTOMER.LASTNAME%TYPE,
    CTM_EMAIL IN CUSTOMER.EMAIL%TYPE,
    CTM_PASSWORD_HASH IN CUSTOMER.PASSWORD_HASH%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
);

END ESHOP_CUSTOMER_API;
/

CREATE OR REPLACE PACKAGE BODY ESHOP_CUSTOMER_API AS

PROCEDURE SP_CUSTOMER_GETALLCUSTOMER 
(
    CTM_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN CTM_CURSOR FOR 
SELECT CUSTOMER.* FROM CUSTOMER;
END;

PROCEDURE SP_CUSTOMER_GETCUSTOMERBYID 
(
    CTM_ID IN CUSTOMER.ID%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN CTM_CURSOR FOR 
SELECT CUSTOMER.* FROM CUSTOMER WHERE CUSTOMER.ID=CTM_ID;
END;

PROCEDURE SP_CUSTOMER_GETCUSTOMERBYEMAIL 
(
    CTM_EMAIL IN CUSTOMER.EMAIL%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN CTM_CURSOR FOR 
SELECT CUSTOMER.* FROM CUSTOMER WHERE CUSTOMER.EMAIL=CTM_EMAIL;
END;

PROCEDURE SP_CUSTOMER_AUTHENTICATECUSTOMER
(
    CTM_EMAIL IN CUSTOMER.EMAIL%TYPE,
    CTM_PASSWORD_HASH IN CUSTOMER.PASSWORD_HASH%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN CTM_CURSOR FOR 
SELECT CUSTOMER.* FROM CUSTOMER WHERE CUSTOMER.EMAIL=CTM_EMAIL AND CUSTOMER.PASSWORD_HASH=CTM_PASSWORD_HASH;
END; 

PROCEDURE SP_CUSTOMER_DELETECUSTOMER 
(
    CTM_ID IN CUSTOMER.ID%TYPE
)
AS
BEGIN
DELETE FROM CUSTOMER WHERE CUSTOMER.ID=CTM_ID;
END;

PROCEDURE SP_CUSTOMER_ADDCUSTOMER
(
    CTM_FIRSTNAME IN CUSTOMER.FIRSTNAME%TYPE,
    CTM_LASTNAME IN CUSTOMER.LASTNAME%TYPE,
    CTM_EMAIL IN CUSTOMER.EMAIL%TYPE,
    CTM_PASSWORD_HASH IN CUSTOMER.PASSWORD_HASH%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
)
AS
CTM_ID INT;
BEGIN
INSERT INTO CUSTOMER(FIRSTNAME, LASTNAME, EMAIL, PASSWORD_HASH, CREATED_AT)
VALUES(CTM_FIRSTNAME, CTM_LASTNAME, CTM_EMAIL, CTM_PASSWORD_HASH, CURRENT_TIMESTAMP(2))
RETURNING ID INTO CTM_ID;
OPEN CTM_CURSOR FOR
SELECT CUSTOMER.* FROM CUSTOMER WHERE CUSTOMER.ID=CTM_ID;
END;

PROCEDURE SP_CUSTOMER_UPDATECUSTOMER 
(
    CTM_ID IN CUSTOMER.ID%TYPE,
    CTM_FIRSTNAME IN CUSTOMER.FIRSTNAME%TYPE,
    CTM_LASTNAME IN CUSTOMER.LASTNAME%TYPE,
    CTM_EMAIL IN CUSTOMER.EMAIL%TYPE,
    CTM_PASSWORD_HASH IN CUSTOMER.PASSWORD_HASH%TYPE,
    CTM_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
UPDATE CUSTOMER SET
    CUSTOMER.FIRSTNAME = CTM_FIRSTNAME, 
    CUSTOMER.LASTNAME = CTM_LASTNAME, 
    CUSTOMER.EMAIL = CTM_EMAIL, 
    CUSTOMER.PASSWORD_HASH = CTM_PASSWORD_HASH
WHERE CUSTOMER.ID = CTM_ID;
OPEN CTM_CURSOR FOR
SELECT CUSTOMER.* FROM CUSTOMER WHERE CUSTOMER.ID=CTM_ID;
END;

END ESHOP_CUSTOMER_API;
/